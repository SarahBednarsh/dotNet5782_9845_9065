<Window x:Class="PL.ParceListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL" xmlns:controls="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:PL"
        mc:Ignorable="d"
        Title="ParceListWindow" Height="450" Width="800"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize">
    <Window.Resources>
        <converters:VisibiltyToOppositeConverter x:Key="VisibiltyToOppositeConverter"/>

        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <StackPanel>
                            <TextBlock Text="{Binding SenderName}"/>
                            <ItemsPresenter/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>


        <DataGrid x:Name="parcelDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Width="500" Height="285" Margin="31,31,269,118" RowDetailsVisibilityMode="VisibleWhenSelected" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" IsReadOnly="True">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridCell_MouseDoubleClick"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="pTLIdColumn" Binding="{Binding Id}" Header="Id" Width="80"/>
                <DataGridTextColumn x:Name="pTLPriorityColumn" Binding="{Binding Priority}" Header="Priority" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="pTLSenderNameColumn" Binding="{Binding SenderName}" Header="Sender Name" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="pTLTargetNameColumn" Binding="{Binding TargetName}" Header="Target Name" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="pTLWeightColumn" Binding="{Binding Weight}" Header="Weight" Width="SizeToHeader"/>
            </DataGrid.Columns>
        </DataGrid>



        <DataGrid x:Name="DataGridBySender" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Width="500" Margin="31,31,269,118" RowDetailsVisibilityMode="Visible" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" IsReadOnly="True">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding SenderName , Mode=OneWay}"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <StackPanel>
                        <DataGrid ItemsSource="{Binding}" AutoGenerateColumns="False">
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridCell_MouseDoubleClick"/>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Id}" Header="Id" Width="80"/>
                                <DataGridTextColumn Binding="{Binding Priority}" Header="Priority" Width="SizeToHeader"/>
                                <DataGridTextColumn Binding="{Binding SenderName}" Header="Sender Name" Width="SizeToHeader"/>
                                <DataGridTextColumn Binding="{Binding TargetName}" Header="Target Name" Width="SizeToHeader"/>
                                <DataGridTextColumn Binding="{Binding Weight}" Header="Weight" Width="SizeToHeader"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        <DataGrid x:Name="DataGridByTarget" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Width="500" Margin="31,0,269,118" RowDetailsVisibilityMode="Visible" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" IsReadOnly="True" Height="285" VerticalAlignment="Bottom">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding TargetName , Mode=OneWay}"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <StackPanel>
                        <DataGrid ItemsSource="{Binding}" AutoGenerateColumns="False">
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridCell_MouseDoubleClick"/>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Id}" Header="Id" Width="80"/>
                                <DataGridTextColumn Binding="{Binding Priority}" Header="Priority" Width="SizeToHeader"/>
                                <DataGridTextColumn Binding="{Binding SenderName}" Header="Sender Name" Width="SizeToHeader"/>
                                <DataGridTextColumn Binding="{Binding TargetName}" Header="Target Name" Width="SizeToHeader"/>
                                <DataGridTextColumn Binding="{Binding Weight}" Header="Weight" Width="SizeToHeader"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>

        <Button x:Name="Close" Content="Close" HorizontalAlignment="Left" Margin="690,377,0,0" VerticalAlignment="Top" Height="30" Width="74" Click="Close_Click"/>
        <Button x:Name="addParcel" Content="Add parcel" VerticalAlignment="Top" Margin="31,375,649,0" Width="120" Click="addParcel_Click"/>
        <Label Grid.Column="0" Content="Group by:" HorizontalAlignment="Left" Margin="639,83,0,0" VerticalAlignment="Top"/>
        <StackPanel Margin="474,329,127,19">
            <Grid>
                <Label x:Name="SenderSelectorText" Content="Select Sender" Foreground="#1f611f"  Margin="6,6,-6,2"/>
                <Button x:Name="ClearSenderSelection" Content="Clear selection" Style="{StaticResource MaterialDesignFlatButton}" HorizontalAlignment="Right" Grid.Column="1" Click="ClearSenderSelection_Click" />
            </Grid>
            <ComboBox
                x:Name="SenderSelector" Style="{StaticResource MaterialDesignOutlinedComboBox}"
                IsEnabled="{Binding IsChecked, ElementName=OutlinedComboBoxEnabledCheckBox}" Width="183" SelectionChanged="SenderSelector_SelectionChanged" />
        </StackPanel>
        <StackPanel Margin="237,338,364,10">
            <Grid>
                <Label x:Name="TargetSelectorText" Content="Select Target" Foreground="#1f611f"  Margin="6,6,-6,2"/>
                <Button x:Name="ClearTargetSelection" Content="Clear selection" Style="{StaticResource MaterialDesignFlatButton}" HorizontalAlignment="Right" Grid.Column="1" Click="ClearTargetSelection_Click"/>
            </Grid>
            <ComboBox
                x:Name="TargetSelector" Style="{StaticResource MaterialDesignOutlinedComboBox}"
                IsEnabled="{Binding IsChecked, ElementName=OutlinedComboBoxEnabledCheckBox}" Width="183" SelectionChanged="TargetSelector_SelectionChanged" />
        </StackPanel>
        <Button x:Name="groupSender" Content="Group by sender" Margin="688,193,48,209" Visibility="{Binding DataGridBySender,Converter={StaticResource VisibiltyToOppositeConverter}}" Click="groupSender_Click" />
        <Button x:Name="unGroupSender" Content="Ungroup" Margin="688,193,48,209" Visibility="{Binding ElementName=DataGridBySender, Path=Visibility}" Click="unGroupSender_Click" />
        <Button x:Name="groupTarget" Content="Group by target" Margin="688,250,48,209" Visibility="{Binding DataGridByTarget,Converter={StaticResource VisibiltyToOppositeConverter}}" Click="groupTarget_Click" />
        <Button x:Name="unGroupTarget" Content="Ungroup" Margin="688,250,48,209" Visibility="{Binding ElementName=DataGridByTarget, Path=Visibility}" Click="unGroupTarget_Click" />

    </Grid>
</Window>
